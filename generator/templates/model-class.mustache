import 'package:json_annotation/json_annotation.dart';
import 'package:compute/compute.dart';

{{#imports}}
import '{{{.}}}.dart';
{{/imports}}

part '{{filename}}.g.dart';

{{#description}}
/// {{.}}
{{/description}}
@JsonSerializable()
class {{className}}{	
	{{className}}({{#hasProperties}}{{{/hasProperties}}
		{{#properties}}
		this.{{propertyName}},
		{{/properties}}
	{{#hasProperties}}}{{/hasProperties}});

	{{#properties}}
	
	{{#description}}
	/// {{{.}}}
	{{/description}}
	{{{jsonKey}}}
	{{{typeName}}}? {{propertyName}};
	{{/properties}}

	factory {{className}}.fromJson(Map<String, dynamic> json) {
		return _${{className}}FromJson(json);
	}
	
	Map<String, dynamic> toJson() => _${{className}}ToJson(this);

	static Future<{{className}}> asyncFromJson(Map<String, dynamic> json) => 
		compute<Map<String, dynamic>, {{className}}>((json)=>{{className}}.fromJson(json), json);

	Future<Map<String, dynamic>> asyncToJson() => 
		compute<void, Map<String, dynamic>>((_)=>toJson(), null);
}