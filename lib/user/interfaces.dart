/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-dart code generator program.
 * https://github.com/marquesinijatinha/bungie-api-dart
 * Do not edit these files manually.
 */

import '../common.dart';
import '../platform.dart';

/**
 * This contract supplies basic information commonly used to display a minimal
 * amount of information about a user. Take care to not add more properties here
 * unless the property applies in all (or at least the majority) of the situations
 * where UserInfoCard is used. Avoid adding game specific or platform specific
 * details here. In cases where UserInfoCard is a subset of the data needed in a
 * contract, use UserInfoCard as a property of other contracts.
 */
class UserInfoCard {
  /**
   * A platform specific additional display name - ex: psn Real Name, bnet Unique
   * Name, etc.
   */
  String supplementalDisplayName;
  /** URL the Icon if available. */
  String iconPath;
  /** Type of the membership. */
  int membershipType;
  /** Membership ID as they user is known in the Accounts service */
  String membershipId;
  /**
   * Display Name the player has chosen for themselves. The display name is optional
   * when the data type is used as input to a platform API.
   */
  String displayName;
}

class GeneralUser {
  String membershipId;
  String uniqueName;
  String normalizedName;
  String displayName;
  int profilePicture;
  int profileTheme;
  int userTitle;
  String successMessageFlags;
  bool isDeleted;
  String about;
  String firstAccess;
  String lastUpdate;
  String legacyPortalUID;
  UserToUserContext context;
  String psnDisplayName;
  String xboxDisplayName;
  String fbDisplayName;
  bool showActivity;
  String locale;
  bool localeInheritDefault;
  String lastBanReportId;
  bool showGroupMessaging;
  String profilePicturePath;
  String profilePictureWidePath;
  String profileThemeName;
  String userTitleDisplay;
  String statusText;
  String statusDate;
  String profileBanExpire;
  String blizzardDisplayName;
}

class UserToUserContext {
  bool isFollowing;
  IgnoreResponse ignoreStatus;
  String globalIgnoreEndDate;
}

class UserTheme {
  int userThemeId;
  String userThemeName;
  String userThemeDescription;
}

class UserMembershipData {
  /**
   * this allows you to see destiny memberships that are visible and linked to this
   * account (regardless of whether or not they have characters on the world server)
   */
  List<UserInfoCard> destinyMemberships;
  GeneralUser bungieNetUser;
}

/** All the partnership info that's fit to expose externally, if we care to do so. */
class PublicPartnershipDetail {
  PartnershipType partnerType;
  String identifier;
  String name;
  String icon;
}

/** Very basic info about a user as returned by the Account server. */
class UserMembership {
  /** Type of the membership. */
  int membershipType;
  /** Membership ID as they user is known in the Accounts service */
  String membershipId;
  /**
   * Display Name the player has chosen for themselves. The display name is optional
   * when the data type is used as input to a platform API.
   */
  String displayName;
}
