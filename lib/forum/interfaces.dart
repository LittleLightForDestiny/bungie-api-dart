/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-ts code generator program.
 * https://github.com/DestinyItemManager/bugie-api-ts
 * Do not edit these files manually.
 */

import '../common.dart';
import '../groupv2/interfaces.dart';
import '../platform.dart';
import '../user/interfaces.dart';

class ForumTopicsCategoryFiltersEnum {
   static const int None = 0;
   static const int Links = 1;
   static const int Questions = 2;
   static const int AnsweredQuestions = 4;
   static const int Media = 8;
   static const int TextOnly = 16;
   static const int Announcement = 32;
   static const int BungieOfficial = 64;
   static const int Polls = 128;
}

class ForumTopicsQuickDateEnum {
   static const int All = 0;
   static const int LastYear = 1;
   static const int LastMonth = 2;
   static const int LastWeek = 3;
   static const int LastDay = 4;
}

class ForumTopicsSortEnum {
   static const int Default = 0;
   static const int LastReplied = 1;
   static const int MostReplied = 2;
   static const int Popularity = 3;
   static const int Controversiality = 4;
   static const int Liked = 5;
   static const int HighestRated = 6;
   static const int MostUpvoted = 7;
}

class ForumPostSortEnum {
   static const int Default = 0;
   static const int OldestFirst = 1;
}

class PostSearchResponse {
  List<PostResponse> relatedPosts;
  List<GeneralUser> authors;
  List<GroupResponse> groups;
  List<TagResponse> searchedTags;
  List<PollResponse> polls;
  List<ForumRecruitmentDetail> recruitmentDetails;
  int availablePages;
  List<PostResponse> results;
  int totalResults;
  bool hasMore;
  PagedQuery query;
  String replacementContinuationToken;
  /**
   * If useTotalResults is true, then totalResults represents an accurate count.
   *
   * If False, it does not, and may be estimated/only the size of the current page.
   *
   * Either way, you should probably always only trust hasMore.
   *
   * This is a long-held historical throwback to when we used to do paging with known
   * total results. Those queries toasted our database, and we were left to hastily
   * alter our endpoints and create backward- compatible shims, of which
   * useTotalResults is one.
   */
  bool useTotalResults;
}

class PostResponse {
  String lastReplyTimestamp;
  bool IsPinned;
  ForumMediaType urlMediaType;
  String thumbnail;
  ForumPostPopularity popularity;
  bool isActive;
  bool isAnnouncement;
  int userRating;
  bool userHasRated;
  bool userHasMutedPost;
  String latestReplyPostId;
  String latestReplyAuthorId;
  IgnoreResponse ignoreStatus;
  String locale;
}

class ForumMediaType {
   static const int None = 0;
   static const int Image = 1;
   static const int Video = 2;
   static const int Youtube = 3;
}

class ForumPostPopularity {
   static const int Empty = 0;
   static const int Default = 1;
   static const int Discussed = 2;
   static const int CoolStory = 3;
   static const int HeatingUp = 4;
   static const int Hot = 5;
}

class PollResponse {
  String topicId;
  List<PollResult> results;
  int totalVotes;
}

class PollResult {
  String answerText;
  int answerSlot;
  String lastVoteDate;
  int votes;
  bool requestingUserVoted;
}

class ForumRecruitmentDetail {
  String topicId;
  bool microphoneRequired;
  ForumRecruitmentIntensityLabel intensity;
  ForumRecruitmentToneLabel tone;
  bool approved;
  String conversationId;
  int playerSlotsTotal;
  int playerSlotsRemaining;
  List<GeneralUser> Fireteam;
  List<String> kickedPlayerIds;
}

class ForumRecruitmentIntensityLabel {
   static const int None = 0;
   static const int Casual = 1;
   static const int Professional = 2;
}

class ForumRecruitmentToneLabel {
   static const int None = 0;
   static const int FamilyFriendly = 1;
   static const int Rowdy = 2;
}

class SaveMessageResult {
  String conversationId;
  String messageId;
}

class CommunityContentSortMode {
   static const int Trending = 0;
   static const int Latest = 1;
   static const int HighestRated = 2;
}
