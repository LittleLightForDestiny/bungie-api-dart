/**
 * Bungie.Net API
 * These endpoints constitute the functionality exposed by Bungie.net, both for more traditional website functionality and for connectivity to Bungie video games and their related functionality.
 *
 * OpenAPI spec version: 2.3.2
 * Contact: support@bungie.com
 *
 * NOTE: This class is auto generated by the bungie-api-ts code generator program.
 * https://github.com/DestinyItemManager/bugie-api-ts
 * Do not edit these files manually.
 */

import 'dart:async';
import '../http.dart';

import '../common.dart';
import './interfaces.dart';

abstract class GetContentTypeParams {
  String type;
}

/** Gets an object describing a particular variant of content. */
  Future<ServerResponse<ContentTypeDescription>> getContentType(HttpClient http, GetContentTypeParams params) {
  return http.request(new HttpClientConfig(
    'GET',
    "https://www.bungie.net/Platform/Content/GetContentType/${params.type}/",
    null,
    null
    ));
}

abstract class GetContentByIdParams {
  /** false */
  bool head;
  String id;
  String locale;
}

/** Returns a content item referenced by id */
  Future<ServerResponse<ContentItemPublicContract>> getContentById(HttpClient http, GetContentByIdParams params) {
  return http.request(new HttpClientConfig(
    'GET',
    "https://www.bungie.net/Platform/Content/GetContentById/${params.id}/${params.locale}/",
    {
      'head': params.head
    },
    null
    ));
}

abstract class GetContentByTagAndTypeParams {
  /** Not used. */
  bool head;
  String locale;
  String tag;
  String type;
}

/** Returns the newest item that matches a given tag and Content Type. */
  Future<ServerResponse<ContentItemPublicContract>> getContentByTagAndType(HttpClient http, GetContentByTagAndTypeParams params) {
  return http.request(new HttpClientConfig(
    'GET',
    "https://www.bungie.net/Platform/Content/GetContentByTagAndType/${params.tag}/${params.type}/${params.locale}/",
    {
      'head': params.head
    },
    null
    ));
}

abstract class SearchContentWithTextParams {
  /** Content type tag: Help, News, etc. Supply multiple ctypes separated by space. */
  String ctype;
  /** Page number for the search results, starting with page 1. */
  int currentpage;
  /** Not used. */
  bool head;
  String locale;
  /** Word or phrase for the search. */
  String searchtext;
  /** For analytics, hint at the part of the app that triggered the search. Optional. */
  String source;
  /** Tag used on the content to be searched. */
  String tag;
}

/**
 * Gets content based on querystring information passed in. Provides basic search
 * and text search capabilities.
 */
  Future<ServerResponse<SearchResultOfContentItemPublicContract>> searchContentWithText(HttpClient http, SearchContentWithTextParams params) {
  return http.request(new HttpClientConfig(
    'GET',
    "https://www.bungie.net/Platform/Content/Search/${params.locale}/",
    {
      'ctype': params.ctype,
      'currentpage': params.currentpage,
      'head': params.head,
      'searchtext': params.searchtext,
      'source': params.source,
      'tag': params.tag
    },
    null
    ));
}

abstract class SearchContentByTagAndTypeParams {
  /** Page number for the search results starting with page 1. */
  int currentpage;
  /** Not used. */
  bool head;
  /** Not used. */
  int itemsperpage;
  String locale;
  String tag;
  String type;
}

/** Searches for Content Items that match the given Tag and Content Type. */
  Future<ServerResponse<SearchResultOfContentItemPublicContract>> searchContentByTagAndType(HttpClient http, SearchContentByTagAndTypeParams params) {
  return http.request(new HttpClientConfig(
    'GET',
    "https://www.bungie.net/Platform/Content/SearchContentByTagAndType/${params.tag}/${params.type}/${params.locale}/",
    {
      'currentpage': params.currentpage,
      'head': params.head,
      'itemsperpage': params.itemsperpage
    },
    null
    ));
}
