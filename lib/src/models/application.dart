import 'package:json_annotation/json_annotation.dart';

import '../enums/application_status.dart';
import 'application_developer.dart';

part 'application.g.dart';

@JsonSerializable()
class Application{
	
	Application();

	factory Application.fromJson(Map<String, dynamic> json) {
		return _$ApplicationFromJson(json);
	}

	/// Unique ID assigned to the application
	@JsonKey(name:'applicationId')
	int? applicationId;
	/// Name of the application
	@JsonKey(name:'name')
	String? name;
	/// URL used to pass the user's authorization code to the application
	@JsonKey(name:'redirectUrl')
	String? redirectUrl;
	/// Link to website for the application where a user can learn more about the app.
	@JsonKey(name:'link')
	String? link;
	/// Permissions the application needs to work
	@JsonKey(name:'scope')
	String? scope;
	/// Value of the Origin header sent in requests generated by this application.
	@JsonKey(name:'origin')
	String? origin;
	/// Current status of the application.
	@JsonKey(name:'status',unknownEnumValue:ApplicationStatus.ProtectedInvalidEnumValue)
	ApplicationStatus? status;
	/// Date the application was first added to our database.
	@JsonKey(name:'creationDate')
	String? creationDate;
	/// Date the application status last changed.
	@JsonKey(name:'statusChanged')
	String? statusChanged;
	/// Date the first time the application status entered the 'Public' status.
	@JsonKey(name:'firstPublished')
	String? firstPublished;
	/// List of team members who manage this application on Bungie.net. Will always consist of at least the application owner.
	@JsonKey(name:'team')
	List<ApplicationDeveloper>? team;
	/// An optional override for the Authorize view name.
	@JsonKey(name:'overrideAuthorizeViewName')
	String? overrideAuthorizeViewName;

	
	
	Map<String, dynamic> toJson() => _$ApplicationToJson(this);
}