// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

GroupResponse _$GroupResponseFromJson(Map<String, dynamic> json) {
  return GroupResponse()
    ..detail = json['detail'] == null
        ? null
        : GroupV2.fromJson(json['detail'] as Map<String, dynamic>)
    ..founder = json['founder'] == null
        ? null
        : GroupMember.fromJson(json['founder'] as Map<String, dynamic>)
    ..alliedIds = (json['alliedIds'] as List)?.map((e) => e as String)?.toList()
    ..parentGroup = json['parentGroup'] == null
        ? null
        : GroupV2.fromJson(json['parentGroup'] as Map<String, dynamic>)
    ..allianceStatus = _$enumDecodeNullable(
        _$GroupAllianceStatusEnumMap, json['allianceStatus'],
        unknownValue: GroupAllianceStatus.ProtectedInvalidEnumValue)
    ..groupJoinInviteCount = json['groupJoinInviteCount'] as int
    ..currentUserMembershipsInactiveForDestiny =
        json['currentUserMembershipsInactiveForDestiny'] as bool
    ..currentUserMemberMap =
        (json['currentUserMemberMap'] as Map<String, dynamic>)?.map(
      (k, e) => MapEntry(k,
          e == null ? null : GroupMember.fromJson(e as Map<String, dynamic>)),
    )
    ..currentUserPotentialMemberMap =
        (json['currentUserPotentialMemberMap'] as Map<String, dynamic>)?.map(
      (k, e) => MapEntry(
          k,
          e == null
              ? null
              : GroupPotentialMember.fromJson(e as Map<String, dynamic>)),
    );
}

Map<String, dynamic> _$GroupResponseToJson(GroupResponse instance) =>
    <String, dynamic>{
      'detail': instance.detail,
      'founder': instance.founder,
      'alliedIds': instance.alliedIds,
      'parentGroup': instance.parentGroup,
      'allianceStatus': _$GroupAllianceStatusEnumMap[instance.allianceStatus],
      'groupJoinInviteCount': instance.groupJoinInviteCount,
      'currentUserMembershipsInactiveForDestiny':
          instance.currentUserMembershipsInactiveForDestiny,
      'currentUserMemberMap': instance.currentUserMemberMap,
      'currentUserPotentialMemberMap': instance.currentUserPotentialMemberMap,
    };

T _$enumDecode<T>(
  Map<T, dynamic> enumValues,
  dynamic source, {
  T unknownValue,
}) {
  if (source == null) {
    throw ArgumentError('A value must be provided. Supported values: '
        '${enumValues.values.join(', ')}');
  }

  final value = enumValues.entries
      .singleWhere((e) => e.value == source, orElse: () => null)
      ?.key;

  if (value == null && unknownValue == null) {
    throw ArgumentError('`$source` is not one of the supported values: '
        '${enumValues.values.join(', ')}');
  }
  return value ?? unknownValue;
}

T _$enumDecodeNullable<T>(
  Map<T, dynamic> enumValues,
  dynamic source, {
  T unknownValue,
}) {
  if (source == null) {
    return null;
  }
  return _$enumDecode<T>(enumValues, source, unknownValue: unknownValue);
}

const _$GroupAllianceStatusEnumMap = {
  GroupAllianceStatus.Unallied: 0,
  GroupAllianceStatus.Parent: 1,
  GroupAllianceStatus.Child: 2,
  GroupAllianceStatus.ProtectedInvalidEnumValue: 999999999,
};
