// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

TrendingEntry _$TrendingEntryFromJson(Map<String, dynamic> json) {
  return TrendingEntry()
    ..weight = (json['weight'] as num?)?.toDouble()
    ..isFeatured = json['isFeatured'] as bool?
    ..identifier = json['identifier'] as String?
    ..entityType = _$enumDecodeNullable(
        _$TrendingEntryTypeEnumMap, json['entityType'],
        unknownValue: TrendingEntryType.ProtectedInvalidEnumValue)
    ..displayName = json['displayName'] as String?
    ..tagline = json['tagline'] as String?
    ..image = json['image'] as String?
    ..startDate = json['startDate'] as String?
    ..endDate = json['endDate'] as String?
    ..link = json['link'] as String?
    ..webmVideo = json['webmVideo'] as String?
    ..mp4Video = json['mp4Video'] as String?
    ..featureImage = json['featureImage'] as String?
    ..items = (json['items'] as List<dynamic>?)
        ?.map((e) => TrendingEntry.fromJson(e as Map<String, dynamic>))
        .toList()
    ..creationDate = json['creationDate'] as String?;
}

Map<String, dynamic> _$TrendingEntryToJson(TrendingEntry instance) =>
    <String, dynamic>{
      'weight': instance.weight,
      'isFeatured': instance.isFeatured,
      'identifier': instance.identifier,
      'entityType': _$TrendingEntryTypeEnumMap[instance.entityType],
      'displayName': instance.displayName,
      'tagline': instance.tagline,
      'image': instance.image,
      'startDate': instance.startDate,
      'endDate': instance.endDate,
      'link': instance.link,
      'webmVideo': instance.webmVideo,
      'mp4Video': instance.mp4Video,
      'featureImage': instance.featureImage,
      'items': instance.items,
      'creationDate': instance.creationDate,
    };

K _$enumDecode<K, V>(
  Map<K, V> enumValues,
  Object? source, {
  K? unknownValue,
}) {
  if (source == null) {
    throw ArgumentError(
      'A value must be provided. Supported values: '
      '${enumValues.values.join(', ')}',
    );
  }

  return enumValues.entries.singleWhere(
    (e) => e.value == source,
    orElse: () {
      if (unknownValue == null) {
        throw ArgumentError(
          '`$source` is not one of the supported values: '
          '${enumValues.values.join(', ')}',
        );
      }
      return MapEntry(unknownValue, enumValues.values.first);
    },
  ).key;
}

K? _$enumDecodeNullable<K, V>(
  Map<K, V> enumValues,
  dynamic source, {
  K? unknownValue,
}) {
  if (source == null) {
    return null;
  }
  return _$enumDecode<K, V>(enumValues, source, unknownValue: unknownValue);
}

const _$TrendingEntryTypeEnumMap = {
  TrendingEntryType.News: 0,
  TrendingEntryType.DestinyItem: 1,
  TrendingEntryType.DestinyActivity: 2,
  TrendingEntryType.DestinyRitual: 3,
  TrendingEntryType.SupportArticle: 4,
  TrendingEntryType.Creation: 5,
  TrendingEntryType.Stream: 6,
  TrendingEntryType.Update: 7,
  TrendingEntryType.Link: 8,
  TrendingEntryType.ForumTag: 9,
  TrendingEntryType.Container: 10,
  TrendingEntryType.Release: 11,
  TrendingEntryType.ProtectedInvalidEnumValue: 999999999,
};
